PROD1file is being created

Maven is a Build tool which helps in creating artifact from the code.
Maven has jdk depedency.
Maven has default archetype. Archetype is called as Maven project template toolkit
mvn archetype:generate
Maven co ordinates:

group id: general unique name for project in a organization (like org.apache.maven i.e., the company name in reverse format). The project id can be same
Artifact id: name of the package and it should be different
version: whenever we release the code  the version number varies.
package: it is given as groupid: artifactid:versionid

The main java project code project structure
 1. src
        main
            java
                #contains the source code
                app.java
        Test
            java
              #has the test cases
              test.java
 2. pom.xml
    it contains the dependencies of the project
Building an application:
1. compiling the source code
    app.java --> app.class
2. Run the test cases on application
3. we create the package/artifact from the code once it's tested (ear/war/jar)
4. We deploy the package to the server( we can also use maven for the same)


Maven Goals:

Maven goals are defined in the build life cycle format.
Built-in Goals are main divided into default,clean,site.
The dafault maven-goals:
clean: remove all files generated from previous build
validate:validate the project whether it has correct projet info or not and it's correct or not
compile: compile the source code of the project
test-compile: to compile the test source code
test: to test the test cases for source code
package: transforms the compiled code into a binary file/ package which is in distributed format
verify: run checks for the package whetehr it meets quality criteria
install: install package on local repository/ (in .m2 directory)
deploy: copies the final package into the remote repository

the higher goal runs the the maven phase.

what is pom.xml?
    pom is a project objet model. POM is the fundamental unit of work in maven. it contains an XML file which has all the info about the
project and configuration details used by maven to build the project.
1. the default packaging is jar packaging if you don't specify in xml file.
2. properties tag is used to specify the version of  maven compiler
3.dependencies tag  (whenever dependency is used, it pulls and stores it under maven dependencies)
    we need to specify the what packages are required to build the project.
    eg: junit
<dependencies>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</test>
    </dependency>
</dependencies>
 </build>

Transitive dependency:
 the dependecncies also require a dependency to run and the dependent dependency will be loaded once the main dependency is used
 Eg: for junit the transitive dependency is hamcrest-core.

Repositories:
 Maven central repository  is the source of all dependencies
 local repository -> .m2 directory
 enterprise repository stores the dependencies of all projects.
